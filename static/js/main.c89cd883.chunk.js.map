{"version":3,"sources":["components/asset/icon/clearSky.svg","components/asset/icon/fewCloud.svg","components/asset/icon/scatteredClouds.svg","components/asset/icon/brokenCloud.svg","components/asset/icon/showerRain.svg","components/asset/icon/rain.svg","components/asset/icon/thunderStorm.svg","components/asset/icon/snow.svg","components/asset/icon/mist.svg","components/SwipeWeather.js","components/App.js","index.js"],"names":["SwiperCore","use","Pagination","SwipeWeather","slides","useState","responseData","setResponseData","mainWeather","setMainWeather","mainInfo","setMainInfo","iconId","setIconId","wind","setWind","cities","apiCall","cityName","a","url","request","axios","get","response","data","weather","main","icon","iconNum","replace","selectIcon","sunny","fewCloud","scatteredClouds","brokenCloud","showerRain","rain","thunderstorm","snow","mist","console","log","useEffect","i","length","push","tag","className","name","src","alt","width","height","description","temp","feels_like","humidity","speed","temp_max","temp_min","onSlideChange","swiper","cityIndex","activeIndex","pagination","clickable","App","class","ReactDOM","render","document","getElementById"],"mappings":"qSAAe,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,4CCA1B,MAA0B,wCCA1B,MAA0B,uCCA1B,MAA0B,iCCA1B,MAA0B,yCCA1B,MAA0B,iCCA1B,MAA0B,iC,eCgBzCA,IAAWC,IAAIC,KAKf,IA4GeC,EA5GM,WAEnB,IAAMC,EAAO,GAFY,EAGaC,mBAAS,IAHtB,mBAGlBC,EAHkB,KAGJC,EAHI,OAIWF,mBAAS,IAJpB,mBAIlBG,EAJkB,KAILC,EAJK,OAKKJ,mBAAS,IALd,mBAKlBK,EALkB,KAKRC,EALQ,OAMEN,mBAAS,IANX,mBAMlBO,EANkB,KAMVC,EANU,OAOHR,mBAAS,IAPN,mBAOlBS,EAPkB,KAOZC,EAPY,KAQnBC,EAAQ,CAAC,UAAU,SAAS,SAAS,WAAW,aAEhDC,EAAO,uCAAC,WAAMC,GAAN,yBAAAC,EAAA,+FAGNC,EAHM,4DAEOF,EAFP,0EAKNG,EAASC,IAAMC,IAAIH,GALb,SAMUC,EANV,OAMNG,EANM,OAOZjB,EAAgBiB,EAASC,MACzBhB,EAAee,EAASC,KAAKC,QAAQ,IACrCf,EAAYa,EAASC,KAAKE,MAC1BZ,EAAQS,EAASC,KAAKX,MAClBF,EAASY,EAASC,KAAKC,QAAQ,GAAGE,KAClCC,EAAUjB,EAAOkB,QAAQ,MAAO,IAChCC,EAAY,GAbJ,KAcJF,EAdI,OAeJ,OAfI,QAkBJ,OAlBI,QAqBH,OArBG,QAwBH,OAxBG,QA2BF,OA3BE,QA8BF,OA9BE,QAiCD,OAjCC,QAoCA,OApCA,QAuCE,OAvCF,gCAgBPE,EAAWC,EAhBJ,oCAmBPD,EAAWE,EAnBJ,oCAsBNF,EAAWG,EAtBL,oCAyBNH,EAAWI,EAzBL,oCA4BNJ,EAAWK,EA5BL,oCA+BJL,EAAWM,EA/BP,oCAkCFN,EAAWO,EAlCT,oCAqCAP,EAAWQ,EArCX,oCAwCER,EAAWS,EAxCb,6BA2CJC,QAAQC,IAAR,YA3CI,QA6CZ7B,EAAUkB,GACVU,QAAQC,IAAIX,GA9CA,4CAAD,sDAiDbY,qBAAU,WACR1B,EAAQ,WACRwB,QAAQC,IAAI,aACZ,IAQF,IAAK,IAAIE,EAAE,EAAGA,EAAE5B,EAAO6B,OAAQD,IAC7BxC,EAAO0C,KACL,eAAC,IAAD,CAAgCC,IAAI,MAApC,UACE,sBAAKC,UAAU,YAAf,UACE,6BAAK1C,EAAa2C,OAClB,qBAAKC,IAAKtC,EAAQuC,IAAI,eAAgBC,MAAM,MAAMC,OAAO,UACzD,6BAAK7C,EAAY8C,iBAEnB,sBAAKN,UAAU,kBAAf,UACK,+BAAKtC,EAAS6C,KAAK,wCAAnB,OACH,+BACE,6BACC,oBAAGP,UAAU,aAAb,yBAAuCtC,EAAS8C,WAAW,+CAE5D,6BACE,oBAAGR,UAAU,aAAb,uBAAqCtC,EAAS+C,SAAS,0CAEzD,6BACA,oBAAGT,UAAU,aAAb,mBAAiClC,EAAK4C,MAAtC,YAEA,oBAAIV,UAAU,aAAd,SACI,oCAAOtC,EAASiD,SAAhB,cAEF,oBAAIX,UAAU,aAAd,SACE,oCAAOtC,EAASkD,SAAhB,sBAtBV,gBAA2BhB,KA6B/B,OACE,cAAC,IAAD,CAAQiB,cAAe,SAACC,GAAD,OArCRC,EAqC2BD,EAAOE,iBAnCjD/C,EADgBD,EAAO+C,IAD1B,IAAkBA,GAqCiDE,WAAY,CAAEC,WAAW,GAAzF,SACI9D,KC9GO+D,EARH,WACV,OACE,qBAAKC,MAAM,YAAX,SACE,cAAC,EAAD,O,MCJNC,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.c89cd883.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clearSky.1ab630c8.svg\";","export default __webpack_public_path__ + \"static/media/fewCloud.e75c4f9b.svg\";","export default __webpack_public_path__ + \"static/media/scatteredClouds.c919b36d.svg\";","export default __webpack_public_path__ + \"static/media/brokenCloud.b11092bf.svg\";","export default __webpack_public_path__ + \"static/media/showerRain.d3ec9e0d.svg\";","export default __webpack_public_path__ + \"static/media/rain.1b23da08.svg\";","export default __webpack_public_path__ + \"static/media/thunderStorm.85c03b9c.svg\";","export default __webpack_public_path__ + \"static/media/snow.cffe015a.svg\";","export default __webpack_public_path__ + \"static/media/mist.f3eb2687.svg\";","import React, { useState,useEffect} from 'react';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport SwiperCore, { Pagination } from 'swiper/core';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/swiper.scss';\r\nimport axios from 'axios';\r\nimport sunny from './asset/icon/clearSky.svg';\r\nimport fewCloud from './asset/icon/fewCloud.svg';\r\nimport scatteredClouds from './asset/icon/scatteredClouds.svg';\r\nimport brokenCloud from './asset/icon/brokenCloud.svg';\r\nimport showerRain from './asset/icon/showerRain.svg';\r\nimport rain from './asset/icon/rain.svg';\r\nimport thunderstorm from './asset/icon/thunderStorm.svg';\r\nimport snow from './asset/icon/snow.svg';\r\nimport mist from './asset/icon/mist.svg';\r\nimport './asset/style/_weather.scss';\r\nSwiperCore.use(Pagination);\r\n\r\n\r\n\r\n\r\nconst SwipeWeather = () => {\r\n\r\n  const slides=[];\r\n  const [responseData, setResponseData]=useState('');\r\n  const [mainWeather, setMainWeather]=useState('');\r\n  const [mainInfo, setMainInfo]=useState('');\r\n  const [iconId, setIconId] =useState('');\r\n  const [wind, setWind]=useState('');\r\n  const cities =['Toronto','Ottawa','London','Hamilton','Kitchener'];\r\n\r\n  const apiCall=async(cityName)=>{\r\n    const API_KEY =`5dd0480be9870a0a40413a3f9f49139e`;\r\n         let city_name=cityName;\r\n    const url=`https://api.openweathermap.org/data/2.5/weather?q=${city_name}, ca&appid=${API_KEY}&units=metric`;\r\n\r\n    const request =axios.get(url);\r\n    const response =await request;\r\n    setResponseData(response.data);\r\n    setMainWeather(response.data.weather[0]);\r\n    setMainInfo(response.data.main);\r\n    setWind(response.data.wind)\r\n    let iconId = response.data.weather[0].icon;\r\n    let iconNum = iconId.replace(/\\D/g, \"\"); \r\n    let selectIcon =\"\";\r\n     switch(iconNum){\r\n       case '01':\r\n         selectIcon=sunny;\r\n         break;\r\n       case '02':\r\n         selectIcon=fewCloud;\r\n         break;\r\n        case '03':\r\n          selectIcon=scatteredClouds;\r\n          break;  \r\n        case '04':\r\n          selectIcon=brokenCloud;\r\n          break;\r\n         case '09':\r\n          selectIcon=showerRain;\r\n          break;\r\n         case '10':\r\n            selectIcon=rain;\r\n            break;\r\n          case '11':\r\n              selectIcon=thunderstorm;\r\n              break;\r\n           case '13':\r\n                selectIcon=snow;\r\n                break;\r\n             case '50':\r\n                  selectIcon=mist;\r\n                  break;   \r\n          default:\r\n            console.log(`no image`);\r\n     }\r\n    setIconId(selectIcon);\r\n    console.log(selectIcon)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    apiCall('Toronto');\r\n    console.log('toronto')\r\n  },[])\r\n\r\n\r\n function callCity(cityIndex){\r\n    let onCallCity =cities[cityIndex]\r\n    apiCall(onCallCity);\r\n }\r\n  \r\n  for (let i=0; i<cities.length; i++){\r\n    slides.push(\r\n      <SwiperSlide key={`slide-${i}`} tag=\"div\">\r\n        <div className=\"main-info\">\r\n          <h1>{responseData.name}</h1>\r\n          <img src={iconId} alt=\"weather-icon\"  width=\"65%\" height=\"270px\"/>\r\n          <h3>{mainWeather.description}</h3>\r\n        </div>\r\n        <div className=\"info-background\">\r\n             <h1>{mainInfo.temp}<span>&#176;</span>C</h1>\r\n          <ul>\r\n            <li>\r\n             <p className=\"small-text\">Feels Like: {mainInfo.feels_like}<span>&#8451;</span></p>\r\n            </li>\r\n            <li>\r\n              <p className=\"small-text\">Humidity: {mainInfo.humidity}<span>&#37;</span></p>\r\n            </li>\r\n            <li>\r\n            <p className=\"small-text\">Wind: {wind.speed}Km/h</p>\r\n            </li>\r\n            <li className=\"small-text\">\r\n                <p>H: {mainInfo.temp_max}&#8451;\r\n                </p></li>\r\n              <li className=\"small-text\">\r\n                <p>L: {mainInfo.temp_min}&#8451;\r\n                </p></li>\r\n          </ul>\r\n          </div>\r\n      </SwiperSlide>\r\n    )\r\n  }\r\n  return ( \r\n    <Swiper onSlideChange={(swiper)=>callCity(swiper.activeIndex)}  pagination={{ clickable: true }}>\r\n       {slides}\r\n    </Swiper>\r\n   );\r\n}\r\n \r\nexport default SwipeWeather;","import React from 'react';\r\nimport SwipeWeather from './SwipeWeather';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  return ( \r\n    <div class=\"container\">\r\n      <SwipeWeather />\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\nimport './components/asset/style/style.scss';\r\n\r\nReactDOM.render(<App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}